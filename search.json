[
  {
    "objectID": "posts/Analysis.html",
    "href": "posts/Analysis.html",
    "title": "Analysis",
    "section": "",
    "text": "Analysis of CO2 Emmissions vs Technology\n\nWhich countries are the leaders in CO2 emmissions?\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_emissions/global_emissions.csv')\n\n# Select a specific year\nyear = 2014\ndf_year = df[df['Year'] == year]\n\n# Sort the data by total CO2 emissions\ndf_sorted = df_year.sort_values(by='Emissions.Production.CO2.Total', ascending=False)\n\n# Select the top 10 countries\ndf_top10 = df_sorted.head(10)\n\n# Plot the bar chart\nplt.bar(df_top10['Country.Name'], df_top10['Emissions.Production.CO2.Total'])\nplt.title(f'Top 10 Countries with highest CO2 Emissions in {year}')\nplt.xlabel('Country')\nplt.ylabel('CO2 Emissions (metric tons)')\nplt.xticks(rotation=90)\nplt.show()\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_emissions/global_emissions.csv')\n\n# Select a specific year\nyear = 2014\ndf_year = df[df['Year'] == year]\n\n# Sort the data by total CO2 emissions\ndf_sorted = df_year.sort_values(by='Emissions.Production.CO2.Total', ascending=True)\n\n# Select the top 10 countries\ndf_bottom10 = df_sorted.head(10)\n\n# Plot the bar chart\nplt.bar(df_bottom10['Country.Name'], df_bottom10['Emissions.Production.CO2.Total'])\nplt.title(f'Bottom 10 Countries with lowest CO2 Emissions in {year}')\nplt.xlabel('Country')\nplt.ylabel('CO2 Emissions (metric tons)')\nplt.xticks(rotation=90)\nplt.show()\n\n\n\n\n\npd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_development/global_development.csv')\n\n\n\n\n\n  \n    \n      \n      Country\n      Year\n      Data.Health.Birth Rate\n      Data.Health.Death Rate\n      Data.Health.Fertility Rate\n      Data.Health.Life Expectancy at Birth, Female\n      Data.Health.Life Expectancy at Birth, Male\n      Data.Health.Life Expectancy at Birth, Total\n      Data.Health.Population Growth\n      Data.Health.Total Population\n      ...\n      Data.Rural Development.Agricultural Land Percent\n      Data.Rural Development.Arable Land\n      Data.Rural Development.Arable Land Percent\n      Data.Rural Development.Land Area\n      Data.Rural Development.Rural Population\n      Data.Rural Development.Rural Population Growth\n      Data.Rural Development.Surface Area\n      Data.Urban Development.Population Density\n      Data.Urban Development.Urban Population Percent\n      Data.Urban Development.Urban Population Percent Growth\n    \n  \n  \n    \n      0\n      Canada\n      1980\n      15.400000\n      7.000000\n      1.754000\n      78.590000\n      71.320000\n      74.866341\n      0.997669\n      24277000.0\n      ...\n      7.357225\n      1.827821\n      4.879744\n      9093510.0\n      5918004\n      0.833712\n      9984670.0\n      2.669706\n      75.623000\n      1.050578\n    \n    \n      1\n      Canada\n      1981\n      15.400000\n      7.100000\n      1.740000\n      78.730000\n      71.600000\n      75.078049\n      1.293245\n      24593000.0\n      ...\n      7.301471\n      1.818526\n      4.918123\n      9093510.0\n      5985198\n      1.129019\n      9984670.0\n      2.704456\n      75.663000\n      1.346126\n    \n    \n      2\n      Canada\n      1982\n      15.300000\n      7.000000\n      1.700000\n      79.110000\n      72.020000\n      75.478537\n      1.240595\n      24900000.0\n      ...\n      7.245717\n      1.810120\n      4.956502\n      9093510.0\n      6047712\n      1.039060\n      9984670.0\n      2.738217\n      75.712000\n      1.305333\n    \n    \n      3\n      Canada\n      1983\n      15.100000\n      7.100000\n      1.690000\n      79.230000\n      72.300000\n      75.680488\n      1.205555\n      25202000.0\n      ...\n      7.288275\n      1.789779\n      4.960241\n      9093510.0\n      6080235\n      0.536333\n      9984670.0\n      2.771427\n      75.874000\n      1.419293\n    \n    \n      4\n      Canada\n      1984\n      15.000000\n      7.000000\n      1.680000\n      79.550000\n      72.690000\n      76.036341\n      1.002812\n      25456000.0\n      ...\n      7.330943\n      1.773217\n      4.963870\n      9093510.0\n      6100530\n      0.333231\n      9984670.0\n      2.799359\n      76.035000\n      1.214785\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6421\n      Heavily indebted poor countries (HIPC)\n      2009\n      39.694362\n      11.568275\n      5.448853\n      57.314810\n      55.042182\n      56.149510\n      2.755547\n      589184942.0\n      ...\n      40.224998\n      0.259585\n      7.742953\n      19752631.0\n      404203594\n      2.132400\n      20392171.0\n      29.828175\n      31.396143\n      4.144006\n    \n    \n      6422\n      Heavily indebted poor countries (HIPC)\n      2010\n      39.249875\n      11.239563\n      5.363884\n      57.941917\n      55.580622\n      56.731231\n      2.742284\n      605342064.0\n      ...\n      40.282701\n      0.254637\n      7.803635\n      19752631.0\n      412723475\n      2.107819\n      20392171.0\n      30.646149\n      31.819793\n      4.128655\n    \n    \n      6423\n      Heavily indebted poor countries (HIPC)\n      2011\n      38.807293\n      10.936774\n      5.278963\n      58.533726\n      56.080300\n      57.275881\n      2.728734\n      621860240.0\n      ...\n      40.402744\n      0.251078\n      7.904542\n      19752631.0\n      421313384\n      2.081275\n      20392171.0\n      31.482400\n      32.249506\n      4.116045\n    \n    \n      6424\n      Heavily indebted poor countries (HIPC)\n      2012\n      38.366140\n      10.661019\n      5.194085\n      59.080577\n      56.538581\n      57.777390\n      2.714024\n      638737676.0\n      ...\n      39.072643\n      0.243605\n      7.877416\n      19752631.0\n      429969441\n      2.054541\n      19765718.5\n      32.336840\n      32.684503\n      4.099480\n    \n    \n      6425\n      Heavily indebted poor countries (HIPC)\n      2013\n      37.924698\n      10.407943\n      5.109213\n      59.585337\n      56.962692\n      58.240852\n      2.698148\n      655971763.0\n      ...\n      39.676293\n      0.253896\n      8.431096\n      19754076.0\n      438680058\n      2.025869\n      19767153.5\n      33.206907\n      33.125161\n      4.082743\n    \n  \n\n6426 rows Ã— 25 columns\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_development/global_development.csv')\n\n# Select a specific year\nyear = 2014\ndf_year = df[df['Year'] == year]\n\n# Sort the data by total CO2 emissions\ndf_sorted = df_year.sort_values(by='Data.Infrastructure.Telephone Lines', ascending=False)\n\n# Select the top 10 countries\ndf_top10 = df_sorted.head(10)\n\n# Plot the bar chart\nplt.bar(df_top10['Country'], df_top10['Data.Infrastructure.Telephone Lines'])\nplt.title(f'Top 10 Countries with highest CO2 Emissions in {year}')\nplt.xlabel('Country')\nplt.ylabel('CO2 Emissions (metric tons)')\nplt.xticks(rotation=90)\nplt.show()\n\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_development/global_development.csv')\n\n# Select the columns of interest\ntelephone_data = df[['Country', 'Data.Infrastructure.Telephone Lines']]\n\n# Drop rows with missing data\ntelephone_data = telephone_data.dropna()\n\n# Filter out the row with country name \"World\"\ntelephone_data = telephone_data[telephone_data['Country'] != 'World']\ntelephone_data = telephone_data[telephone_data['Country'] != 'Low & middle income']\ntelephone_data = telephone_data[telephone_data['Country'] != 'Middle income']\ntelephone_data = telephone_data[telephone_data['Country'] != 'High income']\ntelephone_data = telephone_data[telephone_data['Country'] != 'OECD members']\ntelephone_data = telephone_data[telephone_data['Country'] != 'High income: OECD']\ntelephone_data = telephone_data[telephone_data['Country'] != 'East Asia & Pacific (all income levels)']\ntelephone_data = telephone_data[telephone_data['Country'] != 'East Asia & Pacific (developing only)']\n\n\n# Sort the data by number of telephone lines\ntelephone_data = telephone_data.sort_values(by='Data.Infrastructure.Telephone Lines', ascending=False)\n\n# Select the top 10 countries\ntop10 = telephone_data.head(10)\n\n# Create the bar chart\nplt.bar(top10['Country'], top10['Data.Infrastructure.Telephone Lines'])\nplt.title('Top 10 Countries with the Most Telephone Lines')\nplt.xlabel('Country')\nplt.ylabel('Number of Telephone Lines')\nplt.xticks(rotation=90)\nplt.show()\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_development/global_development.csv')\n\n# Select the columns of interest\ntelephone_data = df[['Country', 'Data.Rural Development.Rural Population Growth']]\n\n# Drop rows with missing data\ntelephone_data = telephone_data.dropna()\n\n# Filter out the row with country name \"World\"\ntelephone_data = telephone_data[telephone_data['Country'] != 'World']\n\n# Sort the data by number of telephone lines\ntelephone_data = telephone_data.sort_values(by='Data.Rural Development.Rural Population Growth', ascending=False)\n\n# Select the top 10 countries\ntop10 = telephone_data.head(10)\n\n# Create the bar chart\nplt.bar(top10['Country'], top10['Data.Rural Development.Rural Population Growth'])\nplt.title('Most Rural Developement Growth')\nplt.xlabel('Country')\nplt.ylabel('Number of Growth')\nplt.xticks(rotation=90)\nplt.show()"
  },
  {
    "objectID": "posts/newNote.html",
    "href": "posts/newNote.html",
    "title": "First File",
    "section": "",
    "text": "print(\"helllo world\")\n\nhelllo world"
  },
  {
    "objectID": "posts/Data.html",
    "href": "posts/Data.html",
    "title": "Data",
    "section": "",
    "text": "CO2 Emissions and Counrtyâ€™s\n\nimport pandas as pd\npd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/emissions/emissions.csv')\n\n\n\n\n\n  \n    \n      \n      Country\n      Year\n      Emissions.Type.CO2\n      Emissions.Type.N2O\n      Emissions.Type.CH4\n      Emissions.Sector.Power Industry\n      Emissions.Sector.Buildings\n      Emissions.Sector.Transport\n      Emissions.Sector.Other Industry\n      Emissions.Sector.Other sectors\n      Ratio.Per GDP\n      Ratio.Per Capita\n    \n  \n  \n    \n      0\n      Afghanistan\n      1970\n      2670.0\n      1820.0\n      12800.0\n      0.06\n      0.58\n      0.23\n      0.07\n      0.53\n      1.557705\n      0.000000\n    \n    \n      1\n      Afghanistan\n      1971\n      2630.0\n      1850.0\n      12900.0\n      0.06\n      0.58\n      0.23\n      0.07\n      0.53\n      1.517670\n      0.000000\n    \n    \n      2\n      Afghanistan\n      1972\n      2180.0\n      1810.0\n      11900.0\n      0.12\n      0.46\n      0.27\n      0.05\n      0.61\n      1.357590\n      0.000000\n    \n    \n      3\n      Afghanistan\n      1973\n      2310.0\n      1830.0\n      11600.0\n      0.17\n      0.57\n      0.24\n      0.02\n      0.47\n      1.307901\n      0.000000\n    \n    \n      4\n      Afghanistan\n      1974\n      2520.0\n      2190.0\n      12800.0\n      0.21\n      0.77\n      0.24\n      0.03\n      0.65\n      1.425016\n      0.000000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      8380\n      Zimbabwe\n      2008\n      4150.0\n      11200.0\n      7960.0\n      2.66\n      2.39\n      1.02\n      1.39\n      0.60\n      1.720451\n      1.417634\n    \n    \n      8381\n      Zimbabwe\n      2009\n      4100.0\n      11100.0\n      8640.0\n      2.71\n      2.71\n      1.08\n      0.68\n      0.58\n      1.728668\n      1.368000\n    \n    \n      8382\n      Zimbabwe\n      2010\n      4100.0\n      11100.0\n      9580.0\n      4.84\n      1.92\n      1.20\n      1.26\n      0.77\n      1.761650\n      1.276703\n    \n    \n      8383\n      Zimbabwe\n      2011\n      4130.0\n      11300.0\n      10500.0\n      5.95\n      1.32\n      2.28\n      1.52\n      0.91\n      1.797911\n      1.193823\n    \n    \n      8384\n      Zimbabwe\n      2012\n      4140.0\n      11300.0\n      10600.0\n      5.55\n      1.34\n      2.58\n      1.97\n      1.04\n      1.775448\n      1.084327\n    \n  \n\n8385 rows Ã— 12 columns\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/emissions/emissions.csv')\n\ndf_co2 = df.loc[df['Emissions.Type.CO2'] > 0]\ndf_co2_year = df_co2.groupby('Year').sum()['Emissions.Type.CO2']\n\nplt.plot(df_co2_year.index, df_co2_year.values)\nplt.xlabel('Year')\nplt.ylabel('CO2 Emissions (metric tons)')\nplt.title('CO2 Emissions by Year')\nplt.show()\n\n\n/tmp/ipykernel_39/2967129644.py:7: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n  df_co2_year = df_co2.groupby('Year').sum()['Emissions.Type.CO2']\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/emissions/emissions.csv')\n\ndf_gas = df[['Emissions.Type.CO2', 'Emissions.Type.N2O', 'Emissions.Type.CH4']].sum()\n\nplt.bar(df_gas.index, df_gas.values)\nplt.xlabel('Gas')\nplt.ylabel('Emissions (metric tons)')\nplt.title('Emissions by Gas')\nplt.show()\n\n\n\n\n\npd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_emissions/global_emissions.csv')\n\n\n\n\n\n  \n    \n      \n      Year\n      Country.Name\n      Country.Code\n      Country.GDP\n      Country.Population\n      Emissions.Production.CH4\n      Emissions.Production.N2O\n      Emissions.Production.CO2.Cement\n      Emissions.Production.CO2.Coal\n      Emissions.Production.CO2.Gas\n      Emissions.Production.CO2.Oil\n      Emissions.Production.CO2.Flaring\n      Emissions.Production.CO2.Other\n      Emissions.Production.CO2.Total\n      Emissions.Global Share.CO2.Cement\n      Emissions.Global Share.CO2.Coal\n      Emissions.Global Share.CO2.Gas\n      Emissions.Global Share.CO2.Oil\n      Emissions.Global Share.CO2.Flaring\n      Emissions.Global Share.CO2.Total\n    \n  \n  \n    \n      0\n      1992\n      Afghanistan\n      AFG\n      1.267754e+10\n      14485543\n      7.13\n      2.89\n      0.046\n      0.022\n      0.363\n      0.927\n      0.022\n      0.000000e+00\n      1.379\n      0.01\n      0.00\n      0.01\n      0.01\n      0.01\n      0.01\n    \n    \n      1\n      1993\n      Afghanistan\n      AFG\n      9.834581e+09\n      15816601\n      7.21\n      2.93\n      0.047\n      0.018\n      0.352\n      0.894\n      0.022\n      0.000000e+00\n      1.333\n      0.01\n      0.00\n      0.01\n      0.01\n      0.01\n      0.01\n    \n    \n      2\n      1994\n      Afghanistan\n      AFG\n      7.919857e+09\n      17075728\n      7.47\n      2.76\n      0.047\n      0.015\n      0.338\n      0.860\n      0.022\n      2.220446e-16\n      1.282\n      0.01\n      0.00\n      0.01\n      0.01\n      0.01\n      0.01\n    \n    \n      3\n      1995\n      Afghanistan\n      AFG\n      1.230753e+10\n      18110662\n      7.83\n      2.88\n      0.047\n      0.015\n      0.322\n      0.824\n      0.022\n      2.220446e-16\n      1.230\n      0.01\n      0.00\n      0.01\n      0.01\n      0.01\n      0.01\n    \n    \n      4\n      1996\n      Afghanistan\n      AFG\n      1.207013e+10\n      18853444\n      8.67\n      3.12\n      0.047\n      0.007\n      0.308\n      0.780\n      0.022\n      1.000000e-03\n      1.165\n      0.01\n      0.00\n      0.01\n      0.01\n      0.01\n      0.00\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2479\n      2014\n      Vietnam\n      VNM\n      5.098024e+11\n      91713848\n      84.93\n      23.48\n      32.694\n      70.517\n      19.599\n      46.196\n      0.000\n      0.000000e+00\n      169.006\n      2.19\n      0.47\n      0.29\n      0.40\n      0.00\n      0.48\n    \n    \n      2480\n      2015\n      Vietnam\n      VNM\n      5.439311e+11\n      92677080\n      83.85\n      25.91\n      34.298\n      83.191\n      20.463\n      55.052\n      0.000\n      0.000000e+00\n      193.004\n      2.39\n      0.57\n      0.30\n      0.46\n      0.00\n      0.54\n    \n    \n      2481\n      2016\n      Vietnam\n      VNM\n      5.776835e+11\n      93640440\n      81.85\n      24.82\n      36.822\n      81.561\n      20.368\n      54.015\n      0.000\n      0.000000e+00\n      192.766\n      2.49\n      0.57\n      0.29\n      0.45\n      0.00\n      0.54\n    \n    \n      2482\n      2017\n      Vietnam\n      VNM\n      6.177747e+11\n      94600640\n      81.28\n      24.89\n      42.735\n      77.680\n      17.877\n      56.957\n      0.000\n      0.000000e+00\n      195.249\n      2.85\n      0.54\n      0.25\n      0.47\n      0.00\n      0.54\n    \n    \n      2483\n      2018\n      Vietnam\n      VNM\n      6.614884e+11\n      95545960\n      81.42\n      25.44\n      49.637\n      94.927\n      18.554\n      60.599\n      0.000\n      1.000000e-03\n      223.718\n      3.17\n      0.64\n      0.25\n      0.50\n      0.00\n      0.61\n    \n  \n\n2484 rows Ã— 20 columns\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_emissions/global_emissions.csv')\n\n# Select a specific country\ncountry = 'United States'\ndf_country = df[df['Country.Name'] == country]\n\n# Group the data by year and sum the emissions from different sources\ndf_year = df_country.groupby('Year')[['Emissions.Production.CO2.Cement', 'Emissions.Production.CO2.Coal',\n                                      'Emissions.Production.CO2.Gas', 'Emissions.Production.CO2.Oil']].sum()\n\n# Plot the line chart\ndf_year.plot(kind='line', figsize=(10, 5))\nplt.title(f'CO2 Emissions from different sources in {country}')\nplt.xlabel('Year')\nplt.ylabel('CO2 Emissions (metric tons)')\nplt.show()\n\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Load the data\ndf = pd.read_csv('https://corgis-edu.github.io/corgis/datasets/csv/global_emissions/global_emissions.csv')\n\n# Select a specific year\nyear = 2014\ndf_year = df[df['Year'] == year]\n\n# Sort the data by total CO2 emissions\ndf_sorted = df_year.sort_values(by='Emissions.Production.CO2.Total', ascending=False)\n\n# Select the top 10 countries\ndf_top10 = df_sorted.head(10)\n\n# Plot the bar chart\nplt.bar(df_top10['Country.Name'], df_top10['Emissions.Production.CO2.Total'])\nplt.title(f'Top 10 Countries with highest CO2 Emissions in {year}')\nplt.xlabel('Country')\nplt.ylabel('CO2 Emissions (metric tons)')\nplt.xticks(rotation=90)\nplt.show()"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesnâ€™t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Intro.html",
    "href": "posts/Intro.html",
    "title": "Intro to Project",
    "section": "",
    "text": "CO2 Emmissions Worldwide and Technology\n\nWho is the biggest culpret of CO2 emmissions? Does that have anything to do with technology developement?\nGlobal warming is affecting our everyday lives and the developement of technology is a big part og that. The issue is that not everyone is as technologically developed, yet global warming affects everyone. In some cases it actually affects places that arenâ€™t as developed more.\nThe issue is that if we expand technology further and share with more countries to help developement, the spread of CO2 emmissions will get even worse than it already is. Will we come to a point in time where we will have to choose between developement and the envirnment? Maybe"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "myblog",
    "section": "",
    "text": "Analysis\n\n\n\n\n\nproject analysis\n\n\n\n\n\n\nMar 11, 2023\n\n\nSarah Redden\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData\n\n\n\n\n\nproject\n\n\n\n\n\n\nMar 11, 2023\n\n\nSarah Redden\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirst File\n\n\n\n\n\nTesting Quarto\n\n\n\n\n\n\nMar 6, 2023\n\n\nBen Winjum\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro to Project\n\n\n\n\n\nProject\n\n\n\n\n\n\nMar 6, 2023\n\n\nBen Winjum\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 6, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 3, 2023\n\n\nTristan Oâ€™Malley\n\n\n\n\n\n\nNo matching items"
  }
]